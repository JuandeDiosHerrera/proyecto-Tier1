<launch>

  <!--arg name="sim" default="false" /-->
  <arg name="sim" default="false" />

  <!--Here we broadcast our final coordinate system for the gripper, since gripper_finger_base_link from the arbotix package is
      not centered at the gripper for our PhantomX Pincher arm. We choose the name gripper_link since the turtlebot_arm package depends on it. -->
  <!--node pkg="tf" type="static_transform_publisher" name="gripper_base_link" args="0 0 -0.01 0.5 -0.5 -0.5 0.5 gripper_finger_base_link gripper_link 50" /-->

  <!-- Unfortunately, we need a virtual helper joint that is part of the URDF -->
  <node name="fake_joint_pub" pkg="pxpincher_description" type="fake_joint_pub.py" output="screen"/> 

  <!--node name="arm_state_pub" pkg="robot_state_publisher" type="robot_state_publisher"/-->

  <!--node name="arm_state_pub" pkg="robot_state_publisher" type="robot_state_publisher">  
  	<param name="publish_frequency" type="double" value="30"/>
  </node-->

  <!-- Start Arbotix driver -->
  <node name="pxpincher" pkg="pxpincher_hardware" type="pxpincher_node" output="screen">
 	<param name="simulation" value="$(arg sim)"/>
  	<rosparam file="$(find pxpincher_config)/config/pincher_arm.yaml" command="load"/>
  	<rosparam file="$(find pxpincher_config)/config/controllers.yaml" ns="/" command="load"/>
  </node>


  <!-- Start Move and Cliente nodes -->
  <node pkg="pxpincher_lib" type="move" name="move" output="screen" />
  <node pkg="pxpincher_lib" type="cliente" name="cliente" output="screen" />
  <node pkg="pxpincher_lib" type="find_and_pick" name="find_and_pick" output="screen" />


</launch>

